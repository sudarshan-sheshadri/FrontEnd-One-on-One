{"ast":null,"code":"var _jsxFileName = \"/home/nineleaps/oneonone/manager/src/testmanmain.js\";\nimport React from 'react';\nimport './testmanmain.css';\nimport remov from './Managerpg1/red_remov.png';\n\nconst Row = ({\n  id,\n  title,\n  remove\n}) => React.createElement(\"div\", {\n  className: \"row\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, id), React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, title), React.createElement(\"div\", {\n  className: \"remove\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, React.createElement(\"img\", {\n  src: remov,\n  href: \"#\",\n  onClick: () => remove(id),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n})));\n\nclass Table extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [{\n        id: 'NL111',\n        title: 'Name 1'\n      }, {\n        id: 'NL222',\n        title: 'Name 2'\n      }, {\n        id: 'NL333',\n        title: 'Name 3'\n      }]\n    };\n\n    this.compareBy = key => {\n      return function (a, b) {\n        if (a[key] < b[key]) return -1;\n        if (a[key] > b[key]) return 1;\n        return 0;\n      };\n    };\n\n    this.sortBy = key => {\n      let arrayCopy = [...this.state.data];\n      arrayCopy.sort(this.compareBy(key));\n      this.setState({\n        data: arrayCopy\n      });\n    };\n\n    this.remove = rowId => {\n      // Array.prototype.filter returns new array\n      // so we aren't mutating state here\n      const arrayCopy = this.state.data.filter(row => row.id !== rowId);\n      this.setState({\n        data: arrayCopy\n      });\n    };\n  }\n\n  render() {\n    const rows = this.state.data.map(rowData => React.createElement(Row, Object.assign({\n      remove: this.remove\n    }, rowData, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })));\n    return React.createElement(\"div\", {\n      style: {\n        color: \"black\"\n      },\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        color: \"black\"\n      },\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        color: \"black\"\n      },\n      className: \"remove\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      onClick: () => this.sortBy('id'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Emp ID\"), React.createElement(\"div\", {\n      onClick: () => this.sortBy('title'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Names\")), React.createElement(\"div\", {\n      className: \"body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, rows));\n  }\n\n}\n\nexport default Table;","map":{"version":3,"sources":["/home/nineleaps/oneonone/manager/src/testmanmain.js"],"names":["React","remov","Row","id","title","remove","Table","Component","state","data","compareBy","key","a","b","sortBy","arrayCopy","sort","setState","rowId","filter","row","render","rows","map","rowData","color"],"mappings":"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","sourcesContent":["import React from'react'\nimport './testmanmain.css'\nimport remov from './Managerpg1/red_remov.png'\n\n\n\nconst Row = ({id, title, remove}) => (\n    <div className=\"row\">\n\n        <div>{id}</div>\n        <div>{title}</div>\n        <div className=\"remove\">\n            <img src={remov} href=\"#\"  onClick={() => remove(id)}></img>\n        </div>\n    </div>\n);\n\nclass Table extends React.Component {\n    state = {\n        data: [\n            {id: 'NL111', title: 'Name 1', },\n            {id: 'NL222', title: 'Name 2', },\n            {id: 'NL333', title: 'Name 3', },\n        ],\n    };\n\n\n    compareBy = (key) => {\n        return function(a, b) {\n            if (a[key] < b[key]) return -1;\n            if (a[key] > b[key]) return 1;\n            return 0;\n        };\n    };\n\n    sortBy = (key) => {\n        let arrayCopy = [...this.state.data];\n        arrayCopy.sort(this.compareBy(key));\n        this.setState({data: arrayCopy});\n    };\n\n    remove = (rowId) => {\n        // Array.prototype.filter returns new array\n        // so we aren't mutating state here\n        const arrayCopy = this.state.data.filter((row) => row.id !== rowId);\n        this.setState({data: arrayCopy});\n    };\n\n    render() {\n        const rows = this.state.data.map( (rowData) => <Row remove={this.remove} {...rowData } />);\n\n        return (\n            <div style={{color:\"black\"}} className=\"table\">\n                <div style={{color:\"black\"}} className=\"header\">\n                    <div style={{color:\"black\"}} className=\"remove\"></div>\n                    <div onClick={() => this.sortBy('id')} >Emp ID</div>\n                    <div onClick={() => this.sortBy('title')}>Names</div>\n\n                </div>\n                <div className=\"body\">\n                    {rows}\n                </div>\n            </div>\n        );\n\n    }\n}\nexport default Table"]},"metadata":{},"sourceType":"module"}