{"ast":null,"code":"import _objectSpread from \"/home/nineleaps/Downloads/project11/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/home/nineleaps/Downloads/project11/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/nineleaps/Downloads/project11/src/signuppg/signupMainbody.js\";\nimport React from 'react';\nimport './signupMainbody.css';\nimport SignupHeader from './signupHeader';\nimport axios from 'axios';\n\nconst formValid = (_ref) => {\n  let formErrors = _ref.formErrors,\n      rest = _objectWithoutProperties(_ref, [\"formErrors\"]);\n\n  let valid = true; // validate form errors being empty\n\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  }); // validate the form was filled out\n\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n  return valid;\n};\n\nexport default class SignupMainbody extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handelSubmit = event => {\n      event.preventDefault();\n\n      if (formValid(this.state)) {\n        console.log(\"\\n        --SUBMITTING--\\n        UserName: \".concat(this.state.username, \"\\n        Email: \").concat(this.state.email, \"\\n        Password: \").concat(this.state.password, \"\\n        Confirm Password: \").concat(this.state.confirmPassword, \"\\n        Mobile Number: \").concat(this.state.mobileNum, \"\\n      \"));\n      } else {\n        console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\n      }\n\n      console.log(this.state);\n      const response = axios({\n        method: 'post',\n        url: 'http://192.168.1.93:8095/adddata',\n        //http://192.168.1.245:8095/employee\n        data: this.state\n      });\n    };\n\n    this.handleChange = e => {\n      e.preventDefault();\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n\n      let formErrors = _objectSpread({}, this.state.formErrors);\n\n      switch (name) {\n        case \"firstName\":\n          formErrors.firstName = value.length < 3 ? \"minimum 3 characaters required\" : \"\";\n          break;\n\n        case \"lastName\":\n          formErrors.lastName = value.length < 3 ? \"minimum 3 characaters required\" : \"\";\n          break;\n\n        case \"email\":\n          formErrors.email = emailRegex.test(value) ? \"\" : \"invalid email address\";\n          break;\n\n        case \"password\":\n          formErrors.password = value.length < 6 ? \"minimum 6 characaters required\" : \"\";\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        formErrors,\n        [name]: value\n      }, () => console.log(this.state));\n    };\n\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      mobileNum: '',\n      formErrors: {\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        mobileNum: \"\"\n      }\n    };\n  }\n  /*handelUsernameChange = (event) => {\n      this.setState({\n          username: event.target.value\n      })\n  };\n   handelEmailChange = (event) => {\n      this.setState({\n          email: event.target.value\n      })\n  };\n  handelPasswordChange = (event) => {\n      this.setState({\n          password: event.target.value\n      })\n  };\n  handelConfirmPasswordChange = (event) => {\n      this.setState({\n          confirmPassword: event.target.value\n      })\n  };\n   handleMobileNumChange = (event) => {\n      this.setState({\n          mobileNum: event.target.value\n      })\n  }; */\n\n\n  render() {\n    const formErrors = this.state.formErrors;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(SignupHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      className: \"form-signin\",\n      onSubmit: this.handelSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card card-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      id: \"profile-name\",\n      className: \"profile-name-card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      className: \"log\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"SIGN UP\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"inputUsername\",\n      className: \"form-control\",\n      placeholder: \"UserName\",\n      value: this.state.username,\n      onChange: this.handleChange,\n      required: true,\n      autoFocus: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"email\",\n      id: \"inputEmail\" // className={formErrors.email.length > 0 ? \"error\" : null}\n      ,\n      className: \"form-control\",\n      placeholder: \"Email\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      required: true,\n      autoFocus: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), formErrors.email.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, formErrors.email), React.createElement(\"input\", {\n      type: \"password\",\n      id: \"inputPassword\",\n      className: \"form-control\",\n      placeholder: \"Password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      id: \"inputConfirmPassword\",\n      className: \"form-control\",\n      placeholder: \"Confirm Password\",\n      value: this.state.confirmPassword,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"inputMobileNum\",\n      className: \"form-control\",\n      placeholder: \"Phone\",\n      value: this.state.mobileNum,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-lg btn-primary btn-block btn-signin\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Sign up\")))), \"  \"));\n  }\n\n}","map":{"version":3,"sources":["/home/nineleaps/Downloads/project11/src/signuppg/signupMainbody.js"],"names":["React","SignupHeader","axios","formValid","formErrors","rest","valid","Object","values","forEach","val","length","SignupMainbody","Component","constructor","props","handelSubmit","event","preventDefault","state","console","log","username","email","password","confirmPassword","mobileNum","error","response","method","url","data","handleChange","e","target","name","value","firstName","lastName","emailRegex","test","setState","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './signupMainbody.css'\nimport SignupHeader from './signupHeader'\n\nimport axios from 'axios';\n\nconst formValid = ({ formErrors, ...rest }) => {\n    let valid = true;\n\n    // validate form errors being empty\n    Object.values(formErrors).forEach(val => {\n        val.length > 0 && (valid = false);\n    });\n\n    // validate the form was filled out\n    Object.values(rest).forEach(val => {\n        val === null && (valid = false);\n    });\n\n    return valid;\n};\n\n\nexport default class SignupMainbody extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            email: '',\n            password: '',\n            confirmPassword: '',\n            mobileNum: '',\n            formErrors: {\n                username: \"\",\n                email: \"\",\n                password: \"\",\n                confirmPassword: \"\",\n                mobileNum:\"\"\n            }\n        };\n    }\n\n\n    /*handelUsernameChange = (event) => {\n        this.setState({\n            username: event.target.value\n        })\n    };\n\n    handelEmailChange = (event) => {\n        this.setState({\n            email: event.target.value\n        })\n    };\n    handelPasswordChange = (event) => {\n        this.setState({\n            password: event.target.value\n        })\n    };\n    handelConfirmPasswordChange = (event) => {\n        this.setState({\n            confirmPassword: event.target.value\n        })\n    };\n\n    handleMobileNumChange = (event) => {\n        this.setState({\n            mobileNum: event.target.value\n        })\n    }; */\n\n    handelSubmit = (event) => {\n        event.preventDefault();\n\n        if (formValid(this.state)) {\n            console.log(`\n        --SUBMITTING--\n        UserName: ${this.state.username}\n        Email: ${this.state.email}\n        Password: ${this.state.password}\n        Confirm Password: ${this.state.confirmPassword}\n        Mobile Number: ${this.state.mobileNum}\n      `);\n        } else {\n            console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\n        }\n\n\n        console.log(this.state);\n\n\n        const response = axios({\n            method: 'post',\n            url: 'http://192.168.1.93:8095/adddata',\n            //http://192.168.1.245:8095/employee\n            data: this.state\n\n        });\n    };\n\n    handleChange = e => {\n        e.preventDefault();\n        const { name, value } = e.target;\n        let formErrors = { ...this.state.formErrors };\n\n        switch (name) {\n            case \"firstName\":\n                formErrors.firstName =\n                    value.length < 3 ? \"minimum 3 characaters required\" : \"\";\n                break;\n            case \"lastName\":\n                formErrors.lastName =\n                    value.length < 3 ? \"minimum 3 characaters required\" : \"\";\n                break;\n            case \"email\":\n                formErrors.email = emailRegex.test(value)\n                    ? \"\"\n                    : \"invalid email address\";\n                break;\n            case \"password\":\n                formErrors.password =\n                    value.length < 6 ? \"minimum 6 characaters required\" : \"\";\n                break;\n            default:\n                break;\n        }\n\n        this.setState({ formErrors, [name]: value }, () => console.log(this.state));\n    };\n\n\n\n    render() {\n        const {formErrors} = this.state;\n        return (\n            <div>\n                <SignupHeader/>\n                <form className=\"form-signin\" onSubmit={this.handelSubmit}>\n                    <div className=\"container\">\n                        <div className=\"card card-container\">\n\n                            <p id=\"profile-name\" className=\"profile-name-card\"/>\n\n                                <h1 className=\"log\">SIGN UP</h1>\n\n\n                                <input type=\"text\"\n                                       id=\"inputUsername\"\n                                       className=\"form-control\"\n                                       placeholder=\"UserName\"\n                                       value={this.state.username}\n                                       onChange={this.handleChange}\n                                       required autoFocus/>\n\n\n                                <input type=\"email\"\n                                       id=\"inputEmail\"\n                                      // className={formErrors.email.length > 0 ? \"error\" : null}\n                                       className=\"form-control\"\n                                       placeholder=\"Email\"\n                                       value={this.state.email}\n                                       onChange={this.handleChange}\n                                       required autoFocus/>\n\n                                        {formErrors.email.length > 0 && (\n                                            <span className=\"errorMessage\">{formErrors.email}</span>\n                                        )}\n\n\n\n                                <input type=\"password\"\n                                       id=\"inputPassword\"\n                                       className=\"form-control\"\n                                       placeholder=\"Password\"\n                                       value={this.state.password}\n                                       onChange={this.handleChange}\n                                       required/>\n\n\n                                <input type=\"password\"\n                                       id=\"inputConfirmPassword\"\n                                       className=\"form-control\"\n                                       placeholder=\"Confirm Password\"\n                                       value={this.state.confirmPassword}\n                                       onChange={this.handleChange}\n                                       required/>\n\n\n                                <input type=\"text\"\n                                       id=\"inputMobileNum\"\n                                       className=\"form-control\"\n                                       placeholder=\"Phone\"\n                                       value={this.state.mobileNum}\n                                       onChange={this.handleChange}\n\n                                       required/>\n\n                                <div>\n                                    <br/>\n                                    <button  className=\"btn btn-lg btn-primary btn-block btn-signin\" type=\"submit\">Sign\n                                        up\n                                    </button>\n\n\n\n\n\n                                </div>\n\n                        </div>\n                        </div>  {/* /card-container */}\n\n                </form>\n            </div>\n        );\n    }\n\n}"]},"metadata":{},"sourceType":"module"}