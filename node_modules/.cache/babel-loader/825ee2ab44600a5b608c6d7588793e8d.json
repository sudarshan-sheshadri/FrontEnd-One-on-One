{"ast":null,"code":"var _jsxFileName = \"/home/nineleaps/Downloads/project11/src/signuppg/signupMainbody.js\";\nimport React from 'react';\nimport './signupMainbody.css';\nimport SignupHeader from './signupHeader';\nimport { Redirect } from 'react-router-dom'; //import {browserHistory} from \"react-router\";\n\nimport axios from 'axios'; //import LogMainbody from \"../loginpg/logMainbody\";\n// const emailRegex = RegExp(\n//     /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n// );\n//\n//\n// const formValid = ({ formErrors, ...rest }) => {\n//     let valid = true;\n//\n//     // validate form errors being empty\n//     Object.values(formErrors).forEach(val => {\n//         val.length > 0 && (valid = false);\n//     });\n//\n//     // validate the form was filled out\n//     Object.values(rest).forEach(val => {\n//         val === null && (valid = false);\n//     });\n//\n//     return valid;\n// };\n\nexport default class SignupMainbody extends React.Component {\n  // handleChange;\n  // submitUserRegistrationForm;\n  constructor(props) {\n    super(props);\n\n    this.handleOnClick = () => {\n      // some action...\n      // then redirect\n      this.setState({\n        redirect: true\n      });\n      alert(\"successfully registered\");\n    };\n\n    this.state = {\n      fields: {},\n      errors: {} // username: '',\n      // email: '',\n      // password: '',\n      // confirmPassword: '',\n      // phone: '',\n      // formErrors: {\n      //     firstName: \"\",\n      //     lastName: \"\",\n      //     email: \"\",\n      //     password: \"\",\n      //     confirmPassword: \"\"\n\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.submitUserRegistrationForm = this.submitUserRegistrationForm.bind(this);\n  }\n\n  // handelUsernameChange = (event) => {\n  //     this.setState({\n  //         username: event.target.value\n  //     })\n  // };\n  //\n  // handelEmailChange = (event) => {\n  //     this.setState({\n  //         email: event.target.value\n  //     })\n  // };\n  // handelPasswordChange = (event) => {\n  //     this.setState({\n  //         password: event.target.value\n  //\n  //     })\n  // };\n  // handelConfirmpasswordChange = (event) => {\n  //     this.setState({\n  //         confirmPassword: event.target.value\n  //     })\n  // };\n  //\n  // handleMobileNumChange = (event) => {\n  //     this.setState({\n  //         phone: event.target.value\n  //     })\n  // };\n  handleChange(e) {\n    let fields = this.state.fields;\n    fields[e.target.name] = e.target.value;\n    this.setState({\n      fields\n    });\n  } // handelSubmit = (event) => {\n  //     event.preventDefault();\n  //     console.log(this.state);\n  //\n  //     if (this.state.password !== this.state.confirmPassword) {\n  //         alert(\"Passwords do not match!\");\n  //     }\n  //     else\n  //         {\n  //\n  //             axios\n  //                 .post('http://192.168.43.128:8095/employee', this.state)\n  //                 .then(response =>{\n  //                     console.log(response.json())\n  //                 }).catch(error =>{\n  //                 console.log(error)\n  //             })\n  //\n  //                 // method: 'post',\n  //                 // url: 'http://192.168.1.245:8095/employee',\n  //                 // //http://192.168.1.245:8095/employee\n  //                 // data: {\n  //                 //     username:this.state.username,\n  //                 //\n  //                 //     password:this.state.password,\n  //                 //     email:this.state.email,\n  //                 //     phone:this.state.phone,\n  //                 }\n  //\n  //\n  //         }\n  // onNavigate(){\n  //     browserHistory.push(\"/logMainbody\");\n  // }\n\n\n  submitUserRegistrationForm(e) {\n    e.preventDefault();\n    console.log(this.state);\n    axios.post('http://192.168.1.96:8095/employee', this.state).then(response => {\n      if (response.data.status === \"true\") {\n        this.props.handleSuccessfulAuth(response.data);\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n\n    if (this.validateForm()) {\n      let fields = {};\n      fields[\"username\"] = \"\";\n      fields[\"email\"] = \"\";\n      fields[\"password\"] = \"\";\n      fields[\"confirmPassword\"] = \"\";\n      fields[\"phone\"] = \"\";\n      this.setState({\n        fields: fields\n      });\n      alert(\"Form submitted\");\n    }\n  }\n\n  validateForm() {\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true;\n\n    if (!fields[\"username\"]) {\n      formIsValid = false;\n      errors[\"username\"] = \"*Please enter your username.\";\n    }\n\n    if (typeof fields[\"username\"] !== \"undefined\") {\n      if (!fields[\"username\"].match(/^[a-zA-Z ]*$/)) {\n        formIsValid = false;\n        errors[\"username\"] = \"*Please enter alphabet characters only.\";\n      }\n    }\n\n    if (!fields[\"email\"]) {\n      formIsValid = false;\n      errors[\"email\"] = \"*Please enter your email-ID.\";\n    }\n\n    if (typeof fields[\"email\"] !== \"undefined\") {\n      //regular expression for email validation\n      var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n\n      if (!pattern.test(fields[\"email\"])) {\n        formIsValid = false;\n        errors[\"email\"] = \"*Please enter valid email-ID.\";\n      }\n    }\n\n    if (!fields[\"password\"]) {\n      formIsValid = false;\n      errors[\"password\"] = \"*Please enter your password.\";\n    }\n\n    if (typeof fields[\"password\"] !== \"undefined\") {\n      if (!fields[\"password\"].match(/^.*(?=.{8,})(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%&]).*$/)) {\n        formIsValid = false;\n        errors[\"password\"] = \"*Please enter secure and strong password.\";\n      }\n    }\n\n    if (!fields[\"confirmPassword\"]) {\n      formIsValid = false;\n      errors[\"confirmPassword\"] = \"*Please enter your password.\";\n    }\n\n    if (typeof fields[\"confirmPassword\"] !== \"undefined\") {\n      if (!fields[\"confirmPassword\"].match(/^.*(?=.{8,})(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%&]).*$/)) {\n        formIsValid = false;\n        errors[\"confirmPassword\"] = \"*Please enter secure and strong password.\";\n      }\n    }\n\n    if (!fields[\"phone\"]) {\n      formIsValid = false;\n      errors[\"phone\"] = \"*Please enter your mobile no.\";\n    }\n\n    if (typeof fields[\"phone\"] !== \"undefined\") {\n      if (!fields[\"phone\"].match(/^[0-9]{10}$/)) {\n        formIsValid = false;\n        errors[\"phone\"] = \"*Please enter valid mobile no.\";\n      }\n    }\n\n    this.setState({\n      errors: errors\n    });\n\n    if (this.state.fields.password !== this.state.fields.confirmPassword) {\n      alert(\"Passwords do not match!\");\n    } else return formIsValid;\n  }\n\n  render() {\n    //const {formErrors} =  this.state;\n    if (this.state.redirect) {\n      return React.createElement(Redirect, {\n        push: true,\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(SignupHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      onSubmit: this.submitUserRegistrationForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"head\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, \"ONE-ON-ONE\"), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card card-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      id: \"profile-name\",\n      className: \"profile-name-card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      name: \"userRegistrationForm\",\n      className: \"form-signin\",\n      onSubmit: this.submitUserRegistrationForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"log\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, \"SIGN UP\"), React.createElement(\"input\", {\n      //className=\"{formErrors.username.length > 0 ? \"error\" : null}\"\n      type: \"text\",\n      id: \"inputUsername\",\n      name: \"username\",\n      className: \"form-control\",\n      placeholder: \"UserName\",\n      value: this.state.fields.username,\n      onChange: this.handleChange //{this.state.errors.username}\n      //onChange={(e) => this.handleChange(e)}\n      ,\n      required: true,\n      autoFocus: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"errorMsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, this.state.errors.username), React.createElement(\"input\", {\n      type: \"email\",\n      id: \"inputEmail\",\n      name: \"email\",\n      className: \"form-control\",\n      placeholder: \"Email\",\n      value: this.state.fields.email,\n      onChange: this.handleChange //onChange={(e) => this.handleChange(e)}\n      ,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"errorMsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, this.state.errors.email), React.createElement(\"input\", {\n      type: \"password\",\n      id: \"inputPassword\",\n      name: \"password\",\n      className: \"form-control\",\n      placeholder: \"Password\",\n      value: this.state.fields.password,\n      onChange: this.handleChange //onChange={(e) => this.handleChange(e)}\n      ,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"errorMsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, this.state.errors.password), React.createElement(\"input\", {\n      type: \"password\",\n      id: \"inputConfirmPassword\",\n      name: \"confirmPassword\",\n      className: \"form-control\",\n      placeholder: \"Confirm Password\",\n      value: this.state.fields.confirmPassword,\n      onChange: this.handleChange //onChange={(e) => this.handleChange(e)}\n      ,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"errorMsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, this.state.errors.confirmPassword), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"phone\" //pattern=\"[0-9]*\"\n      //inputMode=\"numeric\"\n      ,\n      id: \"inputMobileNum\",\n      className: \"form-control\",\n      placeholder: \"Phone\",\n      value: this.state.fields.phone,\n      onChange: this.handleChange //onChange={(e) => this.handleChange(e)}\n      ,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"errorMsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, this.state.errors.phone), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-lg btn-primary btn-block btn-signin\" //onClick={this.onNavigate}\n      ,\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, \"Sign up\"))))));\n  }\n\n} //export default signupMainbody;","map":{"version":3,"sources":["/home/nineleaps/Downloads/project11/src/signuppg/signupMainbody.js"],"names":["React","SignupHeader","Redirect","axios","SignupMainbody","Component","constructor","props","handleOnClick","setState","redirect","alert","state","fields","errors","handleChange","bind","submitUserRegistrationForm","e","target","name","value","preventDefault","console","log","post","then","response","data","status","handleSuccessfulAuth","catch","error","validateForm","formIsValid","match","pattern","RegExp","test","password","confirmPassword","render","username","email","phone"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './signupMainbody.css'\nimport SignupHeader from './signupHeader'\nimport {Redirect} from 'react-router-dom'\n//import {browserHistory} from \"react-router\";\n\nimport axios from 'axios';\n//import LogMainbody from \"../loginpg/logMainbody\";\n\n// const emailRegex = RegExp(\n//     /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n// );\n//\n//\n// const formValid = ({ formErrors, ...rest }) => {\n//     let valid = true;\n//\n//     // validate form errors being empty\n//     Object.values(formErrors).forEach(val => {\n//         val.length > 0 && (valid = false);\n//     });\n//\n//     // validate the form was filled out\n//     Object.values(rest).forEach(val => {\n//         val === null && (valid = false);\n//     });\n//\n//     return valid;\n// };\n\nexport default class SignupMainbody extends React.Component {\n\n    // handleChange;\n    // submitUserRegistrationForm;\n    constructor(props) {\n        super(props);\n        this.state = {\n\n            fields: {},\n            errors: {}\n\n            // username: '',\n            // email: '',\n            // password: '',\n            // confirmPassword: '',\n            // phone: '',\n            // formErrors: {\n            //     firstName: \"\",\n            //     lastName: \"\",\n            //     email: \"\",\n            //     password: \"\",\n            //     confirmPassword: \"\"\n            }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.submitUserRegistrationForm = this.submitUserRegistrationForm.bind(this);\n\n\n    };\n\n\n\n    // handelUsernameChange = (event) => {\n    //     this.setState({\n    //         username: event.target.value\n    //     })\n    // };\n    //\n    // handelEmailChange = (event) => {\n    //     this.setState({\n    //         email: event.target.value\n    //     })\n    // };\n    // handelPasswordChange = (event) => {\n    //     this.setState({\n    //         password: event.target.value\n    //\n    //     })\n    // };\n    // handelConfirmpasswordChange = (event) => {\n    //     this.setState({\n    //         confirmPassword: event.target.value\n    //     })\n    // };\n    //\n    // handleMobileNumChange = (event) => {\n    //     this.setState({\n    //         phone: event.target.value\n    //     })\n    // };\n\n    handleChange(e) {\n        let fields = this.state.fields;\n        fields[e.target.name] = e.target.value;\n        this.setState({\n            fields\n        });\n\n    }\n\n    // handelSubmit = (event) => {\n    //     event.preventDefault();\n    //     console.log(this.state);\n    //\n    //     if (this.state.password !== this.state.confirmPassword) {\n    //         alert(\"Passwords do not match!\");\n    //     }\n    //     else\n    //         {\n    //\n    //             axios\n    //                 .post('http://192.168.43.128:8095/employee', this.state)\n    //                 .then(response =>{\n    //                     console.log(response.json())\n    //                 }).catch(error =>{\n    //                 console.log(error)\n    //             })\n    //\n    //                 // method: 'post',\n    //                 // url: 'http://192.168.1.245:8095/employee',\n    //                 // //http://192.168.1.245:8095/employee\n    //                 // data: {\n    //                 //     username:this.state.username,\n    //                 //\n    //                 //     password:this.state.password,\n    //                 //     email:this.state.email,\n    //                 //     phone:this.state.phone,\n    //                 }\n    //\n    //\n    //         }\n\n    // onNavigate(){\n    //     browserHistory.push(\"/logMainbody\");\n    // }\n\n    submitUserRegistrationForm(e) {\n        e.preventDefault();\n        console.log(this.state)\n\n\n        axios\n                        .post('http://192.168.1.96:8095/employee', this.state)\n                        .then(response =>{\n                            if(response.data.status === \"true\"){\n                                this.props.handleSuccessfulAuth(response.data);\n                            }\n                        }).catch(error =>{\n                        console.log(error)\n                    });\n        if (this.validateForm()) {\n            let fields = {};\n            fields[\"username\"] = \"\";\n            fields[\"email\"] = \"\";\n            fields[\"password\"] = \"\";\n            fields[\"confirmPassword\"] = \"\";\n            fields[\"phone\"] = \"\";\n            this.setState({fields:fields});\n            alert(\"Form submitted\");\n        }\n\n    }\n\n\n    validateForm() {\n\n        let fields = this.state.fields;\n        let errors = {};\n        let formIsValid = true;\n\n        if (!fields[\"username\"]) {\n            formIsValid = false;\n            errors[\"username\"] = \"*Please enter your username.\";\n        }\n\n        if (typeof fields[\"username\"] !== \"undefined\") {\n            if (!fields[\"username\"].match(/^[a-zA-Z ]*$/)) {\n                formIsValid = false;\n                errors[\"username\"] = \"*Please enter alphabet characters only.\";\n            }\n        }\n\n        if (!fields[\"email\"]) {\n            formIsValid = false;\n            errors[\"email\"] = \"*Please enter your email-ID.\";\n        }\n\n        if (typeof fields[\"email\"] !== \"undefined\") {\n            //regular expression for email validation\n            var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n            if (!pattern.test(fields[\"email\"])) {\n                formIsValid = false;\n                errors[\"email\"] = \"*Please enter valid email-ID.\";\n            }\n        }\n\n\n        if (!fields[\"password\"]) {\n            formIsValid = false;\n            errors[\"password\"] = \"*Please enter your password.\";\n        }\n\n        if (typeof fields[\"password\"] !== \"undefined\") {\n            if (!fields[\"password\"].match(/^.*(?=.{8,})(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%&]).*$/)) {\n                formIsValid = false;\n                errors[\"password\"] = \"*Please enter secure and strong password.\";\n            }\n        }\n\n        if (!fields[\"confirmPassword\"]) {\n            formIsValid = false;\n            errors[\"confirmPassword\"] = \"*Please enter your password.\";\n        }\n\n        if (typeof fields[\"confirmPassword\"] !== \"undefined\") {\n            if (!fields[\"confirmPassword\"].match(/^.*(?=.{8,})(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%&]).*$/)) {\n                formIsValid = false;\n                errors[\"confirmPassword\"] = \"*Please enter secure and strong password.\";\n            }\n        }\n\n        if (!fields[\"phone\"]) {\n            formIsValid = false;\n            errors[\"phone\"] = \"*Please enter your mobile no.\";\n        }\n\n        if (typeof fields[\"phone\"] !== \"undefined\") {\n            if (!fields[\"phone\"].match(/^[0-9]{10}$/)) {\n                formIsValid = false;\n                errors[\"phone\"] = \"*Please enter valid mobile no.\";\n            }\n        }\n\n\n\n        this.setState({\n            errors: errors\n        });\n\n        if (this.state.fields.password !== this.state.fields.confirmPassword)\n        {\n            alert(\"Passwords do not match!\");\n        }\n        else\n\n            return formIsValid;\n\n\n    }\n\n    handleOnClick = () => {\n            // some action...\n            // then redirect\n\n            this.setState({redirect: true});\n            alert(\"successfully registered\")\n        };\n\n\n\n    render() {\n        //const {formErrors} =  this.state;\n\n\n\n            if (this.state.redirect) {\n                return <Redirect push to=\"/login\"/>;\n            }\n\n        return (\n            <div>\n                <SignupHeader/>\n                <form onSubmit= {this.submitUserRegistrationForm}>\n                    <h1 className='head'>ONE-ON-ONE</h1>\n                    <div className=\"container\">\n                        <div className=\"card card-container\">\n\n                            <p id=\"profile-name\" className=\"profile-name-card\"/>\n                            <form  name=\"userRegistrationForm\" className=\"form-signin\" onSubmit= {this.submitUserRegistrationForm}>\n                                <h1 className=\"log\">SIGN UP</h1>\n\n\n                                <input\n                                    //className=\"{formErrors.username.length > 0 ? \"error\" : null}\"\n                                    type=\"text\"\n                                    id=\"inputUsername\"\n                                    name=\"username\"\n                                    className=\"form-control\"\n                                    placeholder=\"UserName\"\n                                    value={this.state.fields.username}\n                                    onChange={this.handleChange}\n                                    //{this.state.errors.username}\n                                    //onChange={(e) => this.handleChange(e)}\n                                       required autoFocus/>\n\n                                <div className=\"errorMsg\">{this.state.errors.username}</div>\n\n\n\n                                <input type=\"email\"\n                                       id=\"inputEmail\"\n                                       name=\"email\"\n                                       className=\"form-control\"\n                                       placeholder=\"Email\"\n                                       value={this.state.fields.email}\n                                       onChange={this.handleChange}\n                                       //onChange={(e) => this.handleChange(e)}\n                                       required/>\n                                <div className=\"errorMsg\">{this.state.errors.email}</div>\n\n\n\n                                <input type=\"password\"\n                                       id=\"inputPassword\"\n                                       name=\"password\"\n                                       className=\"form-control\"\n                                       placeholder=\"Password\"\n                                       value={this.state.fields.password}\n                                       onChange={this.handleChange}\n                                       //onChange={(e) => this.handleChange(e)}\n                                       required/>\n                                <div className=\"errorMsg\">{this.state.errors.password}</div>\n\n\n\n\n                                <input type=\"password\"\n                                       id=\"inputConfirmPassword\"\n                                       name=\"confirmPassword\"\n                                       className=\"form-control\"\n                                       placeholder=\"Confirm Password\"\n                                       value={this.state.fields.confirmPassword}\n                                       onChange={this.handleChange}\n                                       //onChange={(e) => this.handleChange(e)}\n                                       required/>\n                                <div className=\"errorMsg\">{this.state.errors.confirmPassword}</div>\n\n\n                                <input type=\"text\"\n                                       name=\"phone\"                                       //pattern=\"[0-9]*\"\n                                       //inputMode=\"numeric\"\n                                       id=\"inputMobileNum\"\n                                       className=\"form-control\"\n                                       placeholder=\"Phone\"\n                                       value={this.state.fields.phone}\n                                       onChange={this.handleChange}\n                                       //onChange={(e) => this.handleChange(e)}\n\n                                       required/>\n                                <div className=\"errorMsg\">{this.state.errors.phone}</div>\n\n                                    <br/>\n                                    <button  className=\"btn btn-lg btn-primary btn-block btn-signin\"\n                                        //onClick={this.onNavigate}\n                                             type=\"submit\">\n                                        Sign up\n                                    </button>\n\n\n\n\n\n\n                            </form>\n\n                        </div>\n                        {/* /card-container */}\n                    </div>\n                </form>\n            </div>\n        );\n    }\n\n}\n\n//export default signupMainbody;"]},"metadata":{},"sourceType":"module"}